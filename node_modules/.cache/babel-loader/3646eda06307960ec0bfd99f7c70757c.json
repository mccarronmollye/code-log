{"ast":null,"code":"var _jsxFileName = \"/Users/mollymccarron/Development/projects/code-log/client/src/components/LogList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getLogs } from '../actions';\nimport { Route } from 'react-router-dom';\nimport _ from 'lodash';\nimport './log.css';\nimport { Link } from 'react-router-dom';\n\nclass LogList extends Component {\n  componentDidMount() {\n    this.props.getLogs();\n  }\n\n  renderList() {\n    return this.props.logs.map(log => {\n      return React.createElement(\"div\", {\n        className: \"card\",\n        key: log.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, log.date), React.createElement(\"h4\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, log.title), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Goals I accomplished today: \", log.goals_accomplished), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"What I learned: \", log.learned), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"What I don't understand: \", log.unsure), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Goals for tomorrow: \", log.goals_tomorrow))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"big \".concat(log.mood, \" outline icon\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/logs/\".concat(log.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"View Log\"), React.createElement(Route, {\n        path: \"/logs/\".concat(log.id),\n        component: LogShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n} //{_.orderBy(this.renderList(), [log, date])}\n\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(LogList);","map":{"version":3,"sources":["/Users/mollymccarron/Development/projects/code-log/client/src/components/LogList.js"],"names":["React","Component","connect","getLogs","Route","_","Link","LogList","componentDidMount","props","renderList","logs","map","log","id","date","title","goals_accomplished","learned","unsure","goals_tomorrow","mood","LogShow","render","mapStateToProps","state","logReducer","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,WAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAC9BO,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWN,OAAX;AACA;;AAEFO,EAAAA,UAAU,GAAE;AACV,WAAO,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,GAAG,IAAI;AAChC,aACM;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,GAAG,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,GAAG,CAACE,IAAR,CADF,EAEE;AAAI,QAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBF,GAAG,CAACG,KAApB,CAFF,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAiCH,GAAG,CAACI,kBAArC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqBJ,GAAG,CAACK,OAAzB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA8BL,GAAG,CAACM,MAAlC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyBN,GAAG,CAACO,cAA7B,CAJF,CAHJ,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,gBAASP,GAAG,CAACQ,IAAb,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,kBAAWR,GAAG,CAACC,EAAf,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,kBAAWD,GAAG,CAACC,EAAf,CAAX;AAAgC,QAAA,SAAS,EAAEQ,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAXF,CADN;AAmBD,KApBM,CAAP;AAqBD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKb,UAAL,EAA/B,CADF,CADJ;AAKD;;AAnC6B,C,CAsChC;;;AACA,MAAMc,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACC,UAAN,CAAiBf,IADlB;AAELgB,IAAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAezB,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAAoCI,OAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getLogs } from '../actions'\nimport { Route } from 'react-router-dom'\nimport _ from 'lodash';\nimport './log.css'\nimport { Link } from 'react-router-dom';\n\nclass LogList extends Component {\n  componentDidMount(){\n    this.props.getLogs();\n   }\n\n  renderList(){\n    return this.props.logs.map(log => {\n      return (\n            <div className=\"card\" key={log.id}>\n              <div className=\"content\">\n                <p>{log.date}</p>\n                <h4 id=\"title\">{log.title}</h4>\n                  <ul>\n                    <li>Goals I accomplished today: {log.goals_accomplished}</li>\n                    <li>What I learned: {log.learned}</li>\n                    <li>What I don't understand: {log.unsure}</li>\n                    <li>Goals for tomorrow: {log.goals_tomorrow}</li>\n                  </ul>\n              </div>\n              <div>\n                <i className={`big ${log.mood} outline icon`}></i>\n                <Link to={`/logs/${log.id}`}>View Log</Link>\n                <Route path={`/logs/${log.id}`} component={LogShow}/>\n              </div>\n            </div>\n      )\n    })\n  }\n\n  render(){\n    return (\n        <div className=\"card-container\">\n          <div className=\"ui two cards\">{this.renderList()}</div>\n        </div>\n    )\n  }\n}\n\n//{_.orderBy(this.renderList(), [log, date])}\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  }\n}\n\nexport default connect(mapStateToProps, {getLogs})(LogList);\n"]},"metadata":{},"sourceType":"module"}