{"ast":null,"code":"var _jsxFileName = \"/Users/mollymccarron/Development/projects/code-log/client/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getLogs } from '../actions';\nimport './log.css';\n\nclass Cards extends Component {\n  componentDidMount() {\n    this.props.getLogs();\n  }\n\n  renderList() {\n    return this.props.logs.map(log => {\n      const mood = log.mood;\n      return React.createElement(\"div\", {\n        className: \"card-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        key: log.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, log.date), React.createElement(\"h4\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, log.title), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Goals I accomplished today: \", log.goals_accomplished), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"What I learned: \", log.learned), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"What I don't understand: \", log.unsure), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Goals for tomorrow: \", log.goals_tomorrow))), React.createElement(\"div\", {\n        className: \"feelings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"\".concat(mood, \" outline icon\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), \"// \", React.createElement(\"div\", {\n        className: \"feelings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"//   \", React.createElement(\"i\", {\n        className: \"smile outline icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \"//   \", React.createElement(\"i\", {\n        className: \"meh outline icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), \"//   \", React.createElement(\"i\", {\n        className: \"frown outline icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"// \"))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui relaxed divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.renderList());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Cards);","map":{"version":3,"sources":["/Users/mollymccarron/Development/projects/code-log/client/src/components/Cards.js"],"names":["React","Component","connect","getLogs","Cards","componentDidMount","props","renderList","logs","map","log","mood","id","date","title","goals_accomplished","learned","unsure","goals_tomorrow","render","mapStateToProps","state","logReducer","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC5BI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWH,OAAX;AACA;;AAEFI,EAAAA,UAAU,GAAE;AACV,WAAO,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,GAAG,IAAI;AAChC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAED,GAAG,CAACE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,GAAG,CAACG,IAAR,CADF,EAEE;AAAI,QAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBH,GAAG,CAACI,KAApB,CAFF,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAiCJ,GAAG,CAACK,kBAArC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqBL,GAAG,CAACM,OAAzB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA8BN,GAAG,CAACO,MAAlC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyBP,GAAG,CAACQ,cAA7B,CAJF,CAHJ,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,YAAKP,IAAL,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAXF,SAcK;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,WAEE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,WAGE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,QAdL,CADF,CADF,CADF;AA0BD,KA5BM,CAAP;AA6BD;;AAEDQ,EAAAA,MAAM,GAAE;AACN,WAAO;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKZ,UAAL,EAA1C,CAAP;AACD;;AAvC2B;;AA2C9B,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLb,IAAAA,IAAI,EAAEa,KAAK,CAACC,UAAN,CAAiBd,IADlB;AAELe,IAAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAAoCC,KAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getLogs } from '../actions'\nimport './log.css'\n\nclass Cards extends Component {\n  componentDidMount(){\n    this.props.getLogs();\n   }\n\n  renderList(){\n    return this.props.logs.map(log => {\n      const mood = log.mood\n      return (\n        <div className=\"card-container\">\n          <div className=\"ui cards\">\n            <div className=\"card\" key={log.id}>\n              <div className=\"content\">\n                <p>{log.date}</p>\n                <h4 id=\"title\">{log.title}</h4>\n                  <ul>\n                    <li>Goals I accomplished today: {log.goals_accomplished}</li>\n                    <li>What I learned: {log.learned}</li>\n                    <li>What I don't understand: {log.unsure}</li>\n                    <li>Goals for tomorrow: {log.goals_tomorrow}</li>\n                  </ul>\n              </div>\n              <div className=\"feelings\">\n                <i className={`${mood} outline icon`}></i>\n              </div>\n              // <div className=\"feelings\">\n              //   <i className=\"smile outline icon\"></i>\n              //   <i className=\"meh outline icon\"></i>\n              //   <i className=\"frown outline icon\"></i>\n              // </div>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render(){\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  }\n}\n\nexport default connect(mapStateToProps, {getLogs})(Cards);\n"]},"metadata":{},"sourceType":"module"}