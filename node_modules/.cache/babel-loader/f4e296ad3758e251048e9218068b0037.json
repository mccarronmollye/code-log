{"ast":null,"code":"var _jsxFileName = \"/Users/mollymccarron/Development/projects/code-log/client/src/components/LogList.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport LogShow from './LogShow';\nimport { getLogs } from '../actions';\nimport _ from 'lodash';\nimport './log.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass LogList extends Component {\n  componentDidMount(props) {\n    this.props.getLogs();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.renderList = () => {\n      return this.props.logs.map(log => {\n        return React.createElement(\"div\", {\n          className: \"card\",\n          key: log.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, log.date), React.createElement(\"h4\", {\n          id: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, log.title), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Goals I accomplished today: \", log.goals_accomplished), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"What I learned: \", log.learned), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"What I don't understand: \", log.unsure), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Goals for tomorrow: \", log.goals_tomorrow))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"big \".concat(log.mood, \" outline icon\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: \"/logs/\".concat(log.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"View Log\")), React.createElement(\"button\", {\n          onClick: event => this.handleOnClick(event),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Like \", this.state.likes));\n      });\n    };\n\n    this.handleOnClick = event => {\n      console.log('a');\n      fetch('/logs').then(resp => {\n        console.log('b');\n        return resp.json();\n      }).then(logs => {\n        console.log('c', logs);\n      }).catch(err => console.log('d'));\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e');\n      console.log('e'); // a, e, b, c, d\n    };\n\n    this.state = {\n      likes: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n} //{_.orderBy(this.renderList(), [log, date])}\n\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(LogList);","map":{"version":3,"sources":["/Users/mollymccarron/Development/projects/code-log/client/src/components/LogList.js"],"names":["React","Component","Route","LogShow","getLogs","_","Link","connect","LogList","componentDidMount","props","constructor","renderList","logs","map","log","id","date","title","goals_accomplished","learned","unsure","goals_tomorrow","mood","event","handleOnClick","state","likes","console","fetch","then","resp","json","catch","err","render","mapStateToProps","logReducer","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport LogShow from './LogShow'\nimport { getLogs } from '../actions'\nimport _ from 'lodash';\nimport './log.css'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nclass LogList extends Component {\n\n  componentDidMount(props){\n    this.props.getLogs();\n   }\n\n  renderList = () => {\n\n    return this.props.logs.map(log => {\n      return (\n            <div className=\"card\" key={log.id}>\n              <div className=\"content\">\n                <p>{log.date}</p>\n                <h4 id=\"title\">{log.title}</h4>\n                  <ul>\n                    <li>Goals I accomplished today: {log.goals_accomplished}</li>\n                    <li>What I learned: {log.learned}</li>\n                    <li>What I don't understand: {log.unsure}</li>\n                    <li>Goals for tomorrow: {log.goals_tomorrow}</li>\n                  </ul>\n              </div>\n              <div>\n                <i className={`big ${log.mood} outline icon`}></i>\n                <Link to={`/logs/${log.id}`}>View Log</Link>\n              </div>\n              <button onClick={(event) => this.handleOnClick(event)}>Like {this.state.likes}</button>\n            </div>\n      )\n    })\n  }\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      likes: 0\n    }\n\n  }\n\n  handleOnClick = (event) => {\n    console.log('a')\n    fetch('/logs')\n      .then(resp => {\n        console.log('b')\n        return resp.json()\n      })\n      .then(logs => {\n        console.log('c', logs)\n      })\n      .catch(err => console.log('d'))\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n      console.log('e')\n    console.log('e')\n\n    // a, e, b, c, d\n  }\n\n  render(){\n    return (\n        <div className=\"card-container\">\n          <div className=\"ui two cards\">{this.renderList()}</div>\n        </div>\n    )\n  }\n}\n\n//{_.orderBy(this.renderList(), [log, date])}\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  }\n}\n\nexport default connect (mapStateToProps, {getLogs})(LogList)\n"]},"metadata":{},"sourceType":"module"}