{"ast":null,"code":"var _jsxFileName = \"/Users/mollymccarron/Development/projects/code-log/client/src/components/LogShow.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getLogs } from '../actions';\n\nclass LogShow extends Component {\n  componentDidMount() {\n    this.props.getLogs();\n  }\n\n  render() {\n    let log = this.props.logs.find(log => log.id == this.props.match.params.id);\n    return React.createElement(\"div\", {\n      className: \"card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, log ? React.createElement(React.Fragment, null, \" \", React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"h4\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, log.title), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Goals I accomplished today: \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"What I learned: \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"What I don't understand: \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Goals for tomorrow: \"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"big smile outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Edit\")), \" \") : 'Loading...'));\n  }\n\n}\n\nLogShow.defaultProps = {\n  logs: []\n};\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(LogShow);","map":{"version":3,"sources":["/Users/mollymccarron/Development/projects/code-log/client/src/components/LogShow.js"],"names":["React","Component","connect","getLogs","LogShow","componentDidMount","props","render","log","logs","find","id","match","params","title","defaultProps","mapStateToProps","state","logReducer","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE9BI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWH,OAAX;AACD;;AAGDI,EAAAA,MAAM,GAAE;AAEN,QAAIC,GAAG,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,IAAhB,CAAsBF,GAAG,IAAIA,GAAG,CAACG,EAAJ,IAAU,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBF,EAA/D,CAAV;AAEA,WACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIH,GAAG,GAAG,+CAAG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,EAET;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBA,GAAG,CAACM,KAApB,CAFS,EAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CAHO,CAAH,EAUR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,0BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAVQ,MAAH,GAcQ,YAff,CADF,CADA;AAqBD;;AAhC6B;;AAmChCV,OAAO,CAACW,YAAR,GAAqB;AACnBN,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,IAAI,EAAEQ,KAAK,CAACC,UAAN,CAAiBT,IADlB;AAELU,IAAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAejB,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAoCC,OAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getLogs } from '../actions'\n\n\nclass LogShow extends Component {\n\n  componentDidMount(){\n    this.props.getLogs()\n  }\n\n\n  render(){\n\n    let log = this.props.logs.find( log => log.id == this.props.match.params.id)\n\n    return (\n    <div className=\"card-container\">\n      <div className=\"ui card\">\n        { log ? <> <div className=\"content\">\n           <p>Date</p>\n          <h4 id=\"title\">{log.title}</h4>\n            <ul>\n              <li>Goals I accomplished today: </li>\n              <li>What I learned: </li>\n              <li>What I don't understand: </li>\n              <li>Goals for tomorrow: </li>\n            </ul>\n        </div>\n        <div>\n          <i className={`big smile outline icon`}></i>\n          <button>Delete</button>\n          <button>Edit</button>\n        </div> </> : 'Loading...'}\n      </div>\n    </div>\n    )\n  }\n}\n\nLogShow.defaultProps={\n  logs: []\n}\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  }\n}\n\nexport default connect(mapStateToProps, {getLogs})(LogShow);\n"]},"metadata":{},"sourceType":"module"}