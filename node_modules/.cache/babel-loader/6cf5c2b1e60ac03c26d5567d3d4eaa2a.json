{"ast":null,"code":"var _jsxFileName = \"/Users/mollymccarron/Development/projects/code-log/client/src/components/LogShow.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getLogs } from '../actions';\n\nclass LogShow extends Component {\n  componentDidMount() {\n    this.props.getLogs();\n  }\n\n  handleOnClick() {\n    this.props.deleteLog(log.id);\n  }\n\n  render() {\n    let log = this.props.logs.find(log => log.id == this.props.match.params.id);\n    return React.createElement(\"div\", {\n      className: \"card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, log ? React.createElement(React.Fragment, null, \" \", React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, log.date), React.createElement(\"h4\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, log.title), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Goals I accomplished today: \", log.goals_accomplished), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"What I learned: \", log.learned), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"What I don't understand: \", log.unsure), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Goals for tomorrow: \", log.goals_tomorrow))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"big \".concat(log.mood, \" outline icon\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.handleOnClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Edit\")), \" \") : 'Loading...'));\n  }\n\n}\n\nLogShow.defaultProps = {\n  logs: []\n};\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(LogShow);","map":{"version":3,"sources":["/Users/mollymccarron/Development/projects/code-log/client/src/components/LogShow.js"],"names":["React","Component","connect","getLogs","LogShow","componentDidMount","props","handleOnClick","deleteLog","log","id","render","logs","find","match","params","date","title","goals_accomplished","learned","unsure","goals_tomorrow","mood","defaultProps","mapStateToProps","state","logReducer","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAGA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAG9BI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWH,OAAX;AACD;;AAEDI,EAAAA,aAAa,GAAG;AACd,SAAKD,KAAL,CAAWE,SAAX,CAAqBC,GAAG,CAACC,EAAzB;AACD;;AAEDC,EAAAA,MAAM,GAAE;AAEN,QAAIF,GAAG,GAAG,KAAKH,KAAL,CAAWM,IAAX,CAAgBC,IAAhB,CAAqBJ,GAAG,IAAIA,GAAG,CAACC,EAAJ,IAAU,KAAKJ,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBL,EAA9D,CAAV;AAEA,WACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,GAAG,GAAG,+CAAG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,GAAG,CAACO,IAAR,CADQ,EAET;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBP,GAAG,CAACQ,KAApB,CAFS,EAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAiCR,GAAG,CAACS,kBAArC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqBT,GAAG,CAACU,OAAzB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA8BV,GAAG,CAACW,MAAlC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyBX,GAAG,CAACY,cAA7B,CAJF,CAHO,CAAH,EAUR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,gBAASZ,GAAG,CAACa,IAAb,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKf,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAVQ,MAAH,GAcQ,YAff,CADF,CADA;AAqBD;;AApC6B;;AAuChCH,OAAO,CAACmB,YAAR,GAAqB;AACnBX,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLb,IAAAA,IAAI,EAAEa,KAAK,CAACC,UAAN,CAAiBd,IADlB;AAELe,IAAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAFrB,GAAP;AAID,CALD;;AAOA,eAAezB,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAAoCC,OAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getLogs } from '../actions'\n\n\nclass LogShow extends Component {\n\n\n  componentDidMount(){\n    this.props.getLogs()\n  }\n\n  handleOnClick() {\n    this.props.deleteLog(log.id)\n  }\n\n  render(){\n\n    let log = this.props.logs.find(log => log.id == this.props.match.params.id)\n\n    return (\n    <div className=\"card-container\">\n      <div className=\"ui card\">\n        { log ? <> <div className=\"content\">\n           <p>{log.date}</p>\n          <h4 id=\"title\">{log.title}</h4>\n            <ul>\n              <li>Goals I accomplished today: {log.goals_accomplished}</li>\n              <li>What I learned: {log.learned}</li>\n              <li>What I don't understand: {log.unsure}</li>\n              <li>Goals for tomorrow: {log.goals_tomorrow}</li>\n            </ul>\n        </div>\n        <div>\n          <i className={`big ${log.mood} outline icon`}></i>\n          <button onClick={() => this.handleOnClick()}>Delete</button>\n          <a>Edit</a>\n        </div> </> : 'Loading...'}\n      </div>\n    </div>\n    )\n  }\n}\n\nLogShow.defaultProps={\n  logs: []\n}\n\nconst mapStateToProps = state => {\n  return {\n    logs: state.logReducer.logs,\n    loading: state.logReducer.loading\n  }\n}\n\nexport default connect(mapStateToProps, {getLogs})(LogShow);\n"]},"metadata":{},"sourceType":"module"}